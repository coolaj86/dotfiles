#!/usr/bin/env zsh

#export config_dir=$( cd $( dirname ${BASH_SOURCE[0]} ) && pwd )
export config_dir="${HOME}/.config/dotfiles"

export dotfiles=${config_dir}/dotfiles
export XDG_CONFIG_HOME=${HOME}/.config

# Vim variables ######################
export vim_src=${config_dir}/vim
export vim_dst=${HOME}/.vim
export vim_spf13=${XDG_CONFIG_HOME}/spf13-vim

# zsh variables #######################
export zsh_src=${config_dir}/zsh
export zsh_dst=${HOME}

# antibody variables ##################
export antibody_src=${config_dir}/antibody
export antibody_dst=${XDG_CONFIG_HOME}/antibody

# OS X specific variables... ##########
export itunes_src=${config_dir}/itunes
export itunes_dst=~/Library/iTunes/Scripts

export xcode_src=${config_dir}/xcode/
export xcode_dst=~/Library/Developer/Xcode

export terminal_src=${config_dir}/terminal
export terminal_dst=${HOME}/Library/Preferences

export LaunchAgents=${config_dir}/LaunchAgents

# Output functions ###################################################
info () {
    # shellcheck disable=SC2059
    printf "[ \033[00;34m...\033[0m ] $1 \n"
}

user () {
    # shellcheck disable=SC2059
    printf "\r[ \033[0;33m?\033[0m ] $1 \n"
}

success () {
    # shellcheck disable=SC2059
    printf "\r\033[2K[ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
    # shellcheck disable=SC2059
    printf "\r\033[2K[ \033[0;31mFAIL\033[0m ] $1\n"
    echo ''
    exit 1
}

# depreciated...
export color='\033[0;34m'  # Cyan 
export red='\033[0;31m'    # Red
export yellow='\033[0;33m' # Yellow
export reset='\033[0m'     # No Color

# Global functions ###################################################
linkFiles() {
    for src in $(find ${1} -maxdepth 4 -name '*.symlink')
    do
        dst="${2}/.$(basename "${src%.*}")"
        printf "\n\t" && ln -sfv "$src" "$dst"
    done
}

checkDependencies() {
    if [[ "$OSTYPE" =~ ^(darwin)+ ]]; then
        if [ -n "$(command -v brew)" ]; then
            for i in "$@"; do
                [ -z "$(command -v ${i})" ] && brew install "${i}"
            done
        else
            fail "Homebrew is not installed. Please install that first"
        fi
    fi
}

cleanupPATH() {
    export PATH=$(echo "$PATH" | awk -v RS=':' -v ORS=":" '!a[$1]++{if (NR > 1) printf ORS; printf $a[$1]}')
    export MANPATH=$(echo "$MANPATH" | awk -v RS=':' -v ORS=":" '!a[$1]++{if (NR > 1) printf ORS; printf $a[$1]}')
    export INFOPATH=$(echo "$INFOPATH" | awk -v RS=':' -v ORS=":" '!a[$1]++{if (NR > 1) printf ORS; printf $a[$1]}')
}

createPaths() {
    for i in "$@"; do
        [ -n "${i}" ] && mkdir -vp "${i}"
    done
}
